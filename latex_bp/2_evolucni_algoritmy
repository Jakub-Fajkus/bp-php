Evoluční algoritmy (EA) jsou inspirovány přírodními evolučními procesy a Darwinovou teorií evoluce.
EA se využívají ke stochastickému prohledávání stavového prostoru.
EA, narozdíl od jiných metod, pracují s celou populací kandidátních řešení (jedinců), které se vyvíjí paralelně.
Každý jedinec v populaci v sobě nese zakódovanou informaci o konktrétním řešení, kterou nazýváme genotyp.
Tato informace se pomocí růstové funkce převádí na fenotyp, který už reprezentuje řešení daného problému.

Myšlenku EA můžeme popsat následovně.
Máme populaci jedinců, kteří jsou všichni umístěni ve společném prostředí, ve kterém soutěží o zdroje.
To má za následek přirozený výběr jedinců, který se projevuje tak, že horší jedinci mají menší pravděpodobnost reprodukce, než-li ti lepší.
Tímto se přirozeně zvyšuje kvalita populace.
Reprodukce probíhá dvojím způsobem, a to křížením a mutací.
Křížení pracuje se dvěmi rodiči a má za následek vytvoření dvou potomků, kteří vznikají kombinací genotypu obou rodičů.
Mutace pracuje nad jedním rodičem a produkuje jednoho potomka, který má narozdíl od svého ročiče lehce pozměněný genotyp.

EA v sobě zahrnují dva procesy.
Prvním z nich jsou variační operátory (rekombinace, mutace), které do populace přináší potřebnou různorodost a tak zajišťují prohledávání nových možných řešení.
Druhý z nich je operátor selekce, který vybírá častěji lepší řešení a tak zlepšuje průměrnou kvalitu populace.

Činnost obecného EA můžeme vidět na algoritmu 1:
todo: pridat algoritmus klasickeho EA

V této práci se používá přístup inspirovaný LGP, které si stručně popíšeme dále.

LGP je varianta GP, která vyvíjí programy složené z instrukcí imperativního jazyka nebo strojového kódu, narozdíl od výrazů funkcionálního jazyka.
Instrukce mají parametry, kterými mohou být buď konstanty nebo proměnné, které se nazývají registry.
Tyto registry dělíme na vstupní, výstupní, pracovní a registry, obsahující konstanty.

Program v LGP v průběhu svého vykonávání čte hodnoty z registrů a modifikuje je za použití instrukcí.
Tímto provádí transformaci hodnot ze vstupních registrů do výstupních registrů.

LGP zahrnuje koncepty pro větvení, iteraci a vytváření podprogramů.
Tyto koncepty ale nejsou v této práci využity.
Namísto toho se z LGP využívá základní myšlenka lineární struktury programu složeného z instrukci a práce s registry.

